"""
Django settings for liangshisuyun project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import sys
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm4f1fwmv8&-v1@0kn43lzg!y@)*05+evc)q^k%_88(#55ozrld'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.59.88']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'apps.user.apps.UserConfig',或者直接写个user也行
    'user', #用户模块
    'goods', #商品模块
    'cart', #购物车模块
    'order', #订单模块
    'tinymce',#富文本编辑器
    'haystack', # 注册全文检索框架
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'netshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user.my_get_session.get_session',#全局上下文
                # 'user.my_get_session.getLoginUserInfo'
            ],
        },
    },
]

WSGI_APPLICATION = 'netshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'netshop',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '192.168.59.88',
        'PORT': '3306',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=[
    os.path.join(BASE_DIR,'static')
]

MEDIA_ROOT = os.path.join(BASE_DIR,'media') # 图片上传到服务器存放处
#富文本编辑器配置
TINYMCE_DEFAULT_CONFIG = {
    'theme' : 'advanced',#theme主题 ,advanced高级
    'width':600,
    'height':400,
}
# 发送邮件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # 发送邮件配置
EMAIL_HOST = 'smtp.163.com' # smpt服务地址
EMAIL_PORT = 25 # 固定端口
EMAIL_HOST_USER = 'wang_yule@163.com' # 发送邮件的邮箱
EMAIL_HOST_PASSWORD = 'admin123' # 在邮箱中设置的客户端授权密码
EMAIL_FROM = 'Django<wang_yule@163.com>'# 收件人看到的发件人

# CACHES = {
#     # default 是缓存名，可以配置多个缓存
#     "default": {
#         # 应用 django-redis 库的 RedisCache 缓存类
#         "BACKEND": "django_redis.cache.RedisCache",
#         # 配置正确的 ip和port
#         "LOCATION": "redis://127.0.0.1:6379/0",
#         "OPTIONS": {
#             # redis客户端类
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             # redis连接池的关键字参数
#             "CONNECTION_POOL_KWARGS": {
#                 "max_connections": 100
#             }
#             # 如果 redis 设置了密码，那么这里需要设置对应的密码，如果redis没有设置密码，那么这里也不设置
#             # "PASSWORD": "123456",
#         }
#     }
# }

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.59.88:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # "PASSWORD": "mysecret"
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
SESSION_COOKIE_AGE=3600

# 全文检索框架配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎
        #  'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'ENGINE': 'goods.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}
# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
HAYSTACK_SEARCH_RESULTS_PER_PAGE =2
